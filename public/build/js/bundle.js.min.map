{"version":3,"sources":["app.js","input.js","validacion.js"],"names":["mobilMenu","document","querySelector","addEventListener","classList","toggle","inputs","querySelectorAll","textarea","validar","input","tipoInput","dataset","tipo","validity","valid","parentElement","remove","innerHTML","add","mostrarMensajeError","entrada","target","forEach","tipoErrores","mensajesError","nombre","valueMissing","email","typeMismatch","telefono","patternMismatch","direccion","asunto","mensaje","error"],"mappings":"AAGA,IAAAA,UAAAC,SAAAC,cAAA,gBACAF,UAAAG,iBAAA,SAAA,WACAF,SAAAC,cAAA,eACAE,UAAAC,OAAA,cCJA,MAAAC,OAAAL,SAAAM,iBAAA,SACAC,SAAAP,SAAAC,cAAA,YCFA,SAAAO,QAAAC,GACA,IAAAC,EAAAD,EAAAE,QAAAC,KAGAH,EAAAI,SAAAC,OACAL,EAAAM,cAAAZ,UAAAa,OAAA,4BACAP,EAAAM,cAAAd,cAAA,wBAAAgB,UAAA,KAEAR,EAAAM,cAAAZ,UAAAe,IAAA,4BACAT,EAAAM,cAAAd,cAAA,wBAAAgB,UAAAE,oBAAAT,EAAAD,IDJAF,SAAAL,iBAAA,OAAAkB,IACAZ,QAAAY,EAAAC,UAIAhB,OAAAiB,QAAAF,IACAA,EAAAlB,iBAAA,OAAAkB,IACAZ,QAAAY,EAAAC,YCCA,IAAAE,YAAA,CAAA,eAAA,eAAA,kBAAA,eAGA,IAAAC,cAAA,CACAC,OAAA,CACAC,aAAA,mCAEAC,MAAA,CACAD,aAAA,yCACAE,aAAA,0BAGAC,SAAA,CACAH,aAAA,mCACAI,gBAAA,2CAEAC,UAAA,CACAL,aAAA,2CACAI,gBAAA,iCAEAE,OAAA,CACAN,aAAA,wCACAI,gBAAA,sBAEAvB,SAAA,CACAmB,aAAA,yCACAI,gBAAA,wBAOA,SAAAX,oBAAAT,EAAAD,GACA,IAAAwB,EAAA,GAMA,OALAV,YAAAD,QAAAY,IACAzB,EAAAI,SAAAqB,KACAD,EAAAT,cAAAd,GAAAwB,MAGAD","file":"bundle.js","sourcesContent":["/* document.addEventListener('DOMContentLoaded', function(){\r\n});\r\n */\r\n    var mobilMenu = document.querySelector(\".mobile-menu\"); //Debemos poner dobles comillas si queremos seleccionar con clase\r\n    mobilMenu.addEventListener('click', function(){\r\n        var navegacion = document.querySelector(\".navegacion\");\r\n       navegacion.classList.toggle(\"mostrar\"); //Una alternativa al código de abajo, el toggle ayuda a quitar o mostrar como el if\r\n        });\r\n","// import { validar } from \"./validacion.js\";\r\n\r\nconst inputs = document.querySelectorAll(\"input\");\r\nconst textarea = document.querySelector(\"#mensaje\");\r\n\r\n//Validando el textarea\r\ntextarea.addEventListener('blur', (entrada) => { //blur se activa cuando se desenfoca el elemento\r\n    validar(entrada.target);\r\n});\r\n\r\n//Validando los demás inputs\r\ninputs.forEach( entrada => {\r\n    entrada.addEventListener('blur', (entrada) => {\r\n        validar(entrada.target);\r\n    });\r\n});","// const input = document.querySelector('.input');\r\nfunction validar(input) {\r\n    var tipoInput = input.dataset.tipo; //dataSet colecion de los datas\r\n\r\n    //Agregando el estilo de errror al input en caso de no haber ingresado algo\r\n    if(input.validity.valid){\r\n        input.parentElement.classList.remove('input-container--invalid');\r\n        input.parentElement.querySelector('.input-message-error').innerHTML = '';\r\n    }else{\r\n        input.parentElement.classList.add('input-container--invalid');\r\n        input.parentElement.querySelector('.input-message-error').innerHTML = mostrarMensajeError(tipoInput, input);\r\n    }\r\n}\r\n\r\nvar tipoErrores = ['valueMissing', 'typeMismatch', 'patternMismatch', 'customError'];\r\n\r\n//Manejo de errores\r\nlet mensajesError = {\r\n    nombre: {\r\n        valueMissing: \"Este campo no puede estar vacío\"\r\n    },\r\n    email: {\r\n        valueMissing: \"Este campo email no puede quedar vacío\",\r\n        typeMismatch: \"El correo no es valido\"\r\n    },\r\n\r\n    telefono: {\r\n        valueMissing: \"Este campo no puede quedar vacío\",\r\n        patternMismatch: \" 8 numeros en formato sugerido ########\"\r\n    },\r\n    direccion: {\r\n        valueMissing: \"El campo direccion no puede quedar vacío\",\r\n        patternMismatch: \" Escriba una direccion válida\"\r\n    },\r\n    asunto:{\r\n        valueMissing: \"El campo asunto no puede quedar vacío\",\r\n        patternMismatch: \" Escriba un asunto\"\r\n    },\r\n    textarea: {\r\n        valueMissing: \"El campo mensaje no puede quedar vacío\",\r\n        patternMismatch: \" Escriba un mensaje\"\r\n    }\r\n    \r\n}\r\n\r\n\r\n//Mostrar el mensaje segun el tipo\r\nfunction mostrarMensajeError(tipoInput, input) {\r\n    let mensaje = '';\r\n    tipoErrores.forEach(error => {\r\n        if(input.validity[error]){\r\n            mensaje = mensajesError[tipoInput][error];//Mostramos el error\r\n        }\r\n    });\r\n    return mensaje;\r\n}\r\n\r\n"]}